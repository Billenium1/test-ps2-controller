{"entries":[{"timestamp":1744314176907,"editorVersion":"7.0.61","changes":[{"type":"edited","filename":"main.blocks","patch":[{"diffs":[[0,"http"],[-1,"s"],[0,"://"],[-1,"developers.google.com/blockly/x"],[1,"www.w3.org/1999/xht"],[0,"ml\">"],[1,"\n  "],[0,"<var"]],"start1":12,"start2":12,"length1":47,"length2":37},{"diffs":[[0,"riables>"],[1,"\n  "],[0,"<block t"]],"start1":60,"start2":60,"length1":16,"length2":19},{"diffs":[[0,"pe=\""],[-1,"device_forever"],[1,"pxt-on-start"],[0,"\" x=\""],[-1,"39"],[1,"0"],[0,"\" y=\""],[-1,"55\">"],[1,"0\">\n    "],[0,"<sta"]],"start1":80,"start2":80,"length1":38,"length2":39},{"diffs":[[0,"ANDLER\">"],[1,"\n      "],[0,"<block t"]],"start1":133,"start2":133,"length1":16,"length2":23},{"diffs":[[0,"pe=\""],[-1,"controls_if\"><value name=\"IF0\"><shadow type=\"logic_boolean\"><field name=\"BOOL\">TRUE</field></shadow><block type=\"logic_compare\"><field name=\"OP\">GT</field><value name=\"A\"><shadow type=\"math_number\"><field name=\"NUM\">0</field></shadow><block type=\"typescript_expression\"><field name=\"EXPRESSION\">ps2controller.button_pressed(ps2controller.PS2Button.Cross)</field></block></value><value name=\"B\"><shadow type=\"math_number\"><field name=\"NUM\">0</field></shadow></value></block></value><statement name=\"DO0\"><block type=\"device_show_leds\"><field name=\"LEDS\">`\n        # . . . # \n        . # . # . \n        . . # . . \n        . # . # . \n        # . . . #\n        `</field><next><block type=\"device_set_digital"],[1,"device_set_digital_pin\">\n        <field name=\"name\">DigitalPin.P12</field>\n        <value name=\"value\">\n          <shadow type=\"math_number_minmax\">\n            <mutation min=\"0\" max=\"1\" label=\"Number\"></mutation>\n            <field name=\"SLIDER\">1</field>\n          </shadow>\n        </value>\n        <next>\n          <block type=\"spi"],[0,"_pin"],[1,"s"],[0,"\">"],[-1,"<value name=\"name\"><shadow type=\"digital_pin_shadow\">"],[1,"\n            <field name=\"mosi\">DigitalPin.P15</field>\n            "],[0,"<fie"]],"start1":157,"start2":157,"length1":770,"length2":417},{"diffs":[[0,"   <field name=\""],[-1,"pin"],[1,"miso"],[0,"\">DigitalPin.P10"]],"start1":567,"start2":567,"length1":35,"length2":36},{"diffs":[[0,"n.P1"],[-1,"0"],[1,"4"],[0,"</field>"],[-1,"</shadow></value><value name=\"value\"><shadow type=\"math_number_minmax\"><mutation min=\"0\" max=\"1\" label=\"Value\" precision=\"0\"></mutation><field name=\"SLIDER\">100</field></shadow></value></block></next></block></statement><next><block type=\"controls_if\"><value name=\"IF0\"><shadow type=\"logic_boolean\"><field name=\"BOOL\">TRUE</field></shadow><block type=\"logic_compare\"><field name=\"OP\">GT</field><value name=\"A\">"],[1,"\n            <field name=\"sck\">DigitalPin.P13</field>\n            <next>\n              <block type=\"spi_format\">\n                <value name=\"bits\">\n                  <shadow type=\"math_number\">\n                    <field name=\"NUM\">8</field>\n                  </shadow>\n                </value>\n                <value name=\"mode\">\n                  "],[0,"<sha"]],"start1":598,"start2":598,"length1":427,"length2":367},{"diffs":[[0,"e=\"math_number\">"],[1,"\n                    "],[0,"<field name=\"NUM"]],"start1":972,"start2":972,"length1":32,"length2":53},{"diffs":[[0,"UM\">"],[-1,"0"],[1,"3"],[0,"</field>"],[-1,"</shadow><block type=\"typescript_expression\"><field name=\"EXPRESSION\">ps2controller.button_pressed(ps2controller.PS2Button.Square)</field></block></value><value name=\"B\">"],[1,"\n                  </shadow>\n                </value>\n                <next>\n                  <block type=\"spi_frequency\">\n                    <value name=\"frequency\">\n                      "],[0,"<sha"]],"start1":1023,"start2":1023,"length1":187,"length2":208},{"diffs":[[0,"e=\"math_number\">"],[1,"\n                        "],[0,"<field name=\"NUM"]],"start1":1238,"start2":1238,"length1":32,"length2":57},{"diffs":[[0,"ield name=\"NUM\">"],[1,"100000"],[0,"0</field></shado"]],"start1":1281,"start2":1281,"length1":32,"length2":38},{"diffs":[[0,"eld>"],[-1,"</shadow></value></block></value><statement name=\"DO0\"><block type=\"device_set_digital_pin\"><value name=\"name\"><shadow type=\"digital_pin_shadow\"><field name=\"pin\">DigitalPin.P11</field></shadow></value><value name=\"value\"><shadow type=\"math_number_minmax\"><mutation min=\"0\" max=\"1\" label=\"Value\" precision=\"0\"></mutation>"],[1,"\n                      </shadow>\n                    </value>\n                    <next>\n                      <block type=\"typescript_statement\" editable=\"false\">\n                        <mutation line0=\"const config_cmd_exit = hex\" line1=\"    `014300005a5a5a5a5a`\" numlines=\"2\" declaredvars=\"config_cmd_exit\"></mutation>\n                        "],[0,"<fie"]],"start1":1308,"start2":1308,"length1":329,"length2":355},{"diffs":[[0,"me=\""],[-1,"S"],[0,"LI"],[-1,"DER\">100</field></shadow></value><next><block type=\"device_show_leds\"><field name=\"LEDS\">`\n        # # # # # \n        # . . . # \n        # . . . # \n        # . . . # \n        # # # # #\n        `</field></block></next></block></statement><next><block type=\"controls_if\"><value name=\"IF0\"><shadow type=\"logic_boolean\"><field name=\"BOOL\">TRUE</field></shadow><block type=\"logic_compare\"><field name=\"OP\">GT</field><value name=\"A\"><shadow type=\"math_number\"><field name=\"NUM\">0</field></shadow><block type=\"typescript_expression\"><field name=\"EXPRESSION\">ps2controller.button_pressed(ps2controller.PS2Button.Circle)</field></block></value><value name=\"B\"><shadow type=\"math_number\"><field name=\"NUM\">0</field></shadow></value></block></value><statement name=\"DO0\"><block type=\"device_set_digital_pin\"><value name=\"name\"><shadow type=\"digital_pin_shadow\"><field name=\"pin\">DigitalPin.P12</field></shadow></value><value name=\"value\"><shadow type=\"math_number_minmax\"><mutation min=\"0\" max=\"1\" label=\"Value\" precision=\"0"],[1,"NE0\">const config_cmd_exit = hex</field>\n                        <field name=\"LINE1\">    `014300005a5a5a5a5a`</field>\n                        <next>\n                          <block type=\"typescript_statement\" editable=\"false\">\n                            <mutation line0=\"function send_command(transmit: Buffer) {\" line1=\"    //transmit = reverse.rbuffer(transmit)\" line2=\"    pins.digitalWritePin(DigitalPin.P12, 0);\" line3=\"    for (let i = 0; i &lt; transmit.length; i++) {\" line4=\"        pins.spiWrite(transmit[i]);\" line5=\"    }\" line6=\"    pins.digitalWritePin(DigitalPin.P12, 1)\" line7=\"}\" numlines=\"8"],[0,"\"></"]],"start1":1668,"start2":1668,"length1":1024,"length2":620},{"diffs":[[0,"=\"8\"></mutation>"],[1,"\n                            "],[0,"<field name=\"SLI"]],"start1":2281,"start2":2281,"length1":32,"length2":61},{"diffs":[[0,"me=\""],[-1,"S"],[0,"LI"],[-1,"DER\">100</field></shadow></value><next><block type=\"device_show_leds\"><field name=\"LEDS\">`\n        . # # # . \n        # # . # # \n        # . . . # \n        # # . # # \n        . # # # .\n"],[1,"NE0\">function send_command(transmit: Buffer) {</field>\n                            <field name=\"LINE1\">    //transmit = reverse.rbuffer(transmit)</field>\n                    "],[0,"        "],[-1,"`</"],[1,"<"],[0,"field"],[-1,"></block></next></block></statement><next><block type=\"controls_if\"><value name=\"IF0\"><shadow type=\"logic_boolean\"><field name=\"BOOL\">TRUE</field></shadow><block type=\"logic_compare\"><field name=\"OP\">GT</field><value name=\"A\"><shadow type=\"math_number\"><field name=\"NUM\">0</field></shadow><block type=\"typescript_expression\"><field name=\"EXPRESSION\">ps2controller.button_pressed(ps2controller.PS2Button.Triangle)</field></block></value><value name=\"B\"><shadow type=\"math_number\"><field name=\"NUM\">0</field></shadow></value></block></value><statement name=\"DO0\"><block type=\"device_set_digital_pin\"><value name=\"name\"><shadow type=\"digital_pin_shadow\"><field name=\"pin\">"],[1," name=\"LINE2\">    pins.digitalWritePin(DigitalPin.P12, 0);</field>\n                            <field name=\"LINE3\">    for (let i = 0; i &lt; transmit.length; i++) {</field>\n                            <field name=\"LINE4\">        pins.spiWrite(transmit[i]);</field>\n                            <field name=\"LINE5\">    }</field>\n                            <field name=\"LINE6\">    pins.digitalWritePin("],[0,"Digi"]],"start1":2335,"start2":2335,"length1":881,"length2":599},{"diffs":[[0,"n.P1"],[-1,"3"],[1,"2, 1)"],[0,"</field>"],[-1,"</shadow></value><value name=\"value\"><shadow type=\"math_number_minmax\"><mutation min=\"0\" max=\"1\" label=\"Value\" precision=\"0\"></mutation>"],[1,"\n                            "],[0,"<fie"]],"start1":2939,"start2":2939,"length1":153,"length2":50},{"diffs":[[0,"me=\""],[-1,"S"],[0,"LI"],[-1,"DER\">100</field></shadow></value><next><block type=\"device_show_leds\"><field name=\"LEDS\">`\n        . . # . . \n        . # . # . \n        . # . # . \n        # . . . # \n        # # # # #\n        `</field></block></next>"],[1,"NE7\">}</field>\n                          </block>\n                        </next>\n                      </block>\n                    </next>\n                  </block>\n                </next>\n              </block>\n            </next>\n          </block>\n        </next>\n      "],[0,"</block>"],[1,"\n    "],[0,"</st"]],"start1":2994,"start2":2994,"length1":236,"length2":299},{"diffs":[[0,"ent>"],[1,"\n  "],[0,"</block>"],[-1,"</next></block></next></block></next>"],[1,"\n  <block type=\"device_forever\" x=\"535\" y=\"0\">\n    <statement name=\"HANDLER\">\n      <block type=\"typescript_statement\" editable=\"false\">\n        <mutation line0=\"send_command(config_cmd_exit)\" numlines=\"1\"></mutation>\n        <field name=\"LINE0\">send_command(config_cmd_exit)</field>\n      "],[0,"</block>"],[1,"\n    "],[0,"</st"]],"start1":3297,"start2":3297,"length1":61,"length2":322},{"diffs":[[0,"atement>"],[1,"\n  "],[0,"</block>"],[1,"\n"],[0,"</xml>"]],"start1":3619,"start2":3619,"length1":22,"length2":26}]},{"type":"edited","filename":"main.ts","patch":[{"diffs":[[0," `)\n"],[-1,"        pins.digitalWritePin(DigitalPin.P10, 100)\n"],[0,"    }\n"],[1,""],[0,"    "]],"start1":249,"start2":249,"length1":64,"length2":14},{"diffs":[[0,") {\n"],[-1,"        pins.digitalWritePin(DigitalPin.P11, 100)\n"],[0,"    "]],"start1":331,"start2":331,"length1":58,"length2":8},{"diffs":[[0,") {\n"],[-1,"        pins.digitalWritePin(DigitalPin.P12, 100)\n"],[0,"    "]],"start1":563,"start2":563,"length1":58,"length2":8},{"diffs":[[0,"       `)\n    }\n"],[1,""],[0,"    if (ps2contr"]],"start1":707,"start2":707,"length1":32,"length2":32},{"diffs":[[0,") {\n"],[-1,"        pins.digitalWritePin(DigitalPin.P13, 100)\n"],[0,"    "]],"start1":797,"start2":797,"length1":58,"length2":8}]},{"type":"edited","filename":"pxt.json","patch":[{"diffs":[[0,"r\",\n"],[-1,"    \"description\": \"\",\n"],[0,"    "]],"start1":33,"start2":33,"length1":31,"length2":8},{"diffs":[[0,"15d\""],[-1,","],[0,"\n    "],[1,"},\n"],[0,"    \""],[-1,"microph"],[1,"descripti"],[0,"on"],[-1,"e"],[0,"\": \""],[-1,"*\"\n    }"],[1,"\""],[0,",\n  "]],"start1":199,"start2":199,"length1":41,"length2":37},{"diffs":[[0,"\n    ],\n"],[1,"    \"preferredEditor\": \"tsprj\",\n"],[0,"    \"tar"]],"start1":331,"start2":331,"length1":16,"length2":48},{"diffs":[[0,"   }"],[-1,",\n    \"preferredEditor\": \"tsprj\"\n}"],[0,"\n"],[1,"}"]],"start1":617,"start2":617,"length1":39,"length2":6}]}]},{"timestamp":1744314414904,"editorVersion":"7.0.61","changes":[{"type":"edited","filename":"main.ts","patch":[{"diffs":[[0," # ."],[-1,"reverse.rbit(0)"],[0,"\n   "]],"start1":211,"start2":211,"length1":23,"length2":8}]}]},{"timestamp":1744315142250,"editorVersion":"7.0.61","changes":[{"type":"edited","filename":"main.ts","patch":[{"diffs":[[0,"       . # . # ."],[1,"reverse.rbit(0)"],[0,"\n            # ."]],"start1":199,"start2":199,"length1":32,"length2":47}]}]},{"timestamp":1744315173736,"editorVersion":"7.0.61","changes":[{"type":"edited","filename":"main.blocks","patch":[{"diffs":[[0,"iables><"],[1,"block type=\"device_forever\" x=\"39\" y=\"55\"><statement name=\"HANDLER\"><block type=\"controls_if\"><value name=\"IF0\"><shadow type=\"logic_boolean\"><field name=\"BOOL\">TRUE</field></shadow><block type=\"logic_compare\"><field name=\"OP\">GT</field><value name=\"A\"><shadow type=\"math_number\"><field name=\"NUM\">0</field></shadow><block type=\"typescript_expression\"><field name=\"EXPRESSION\">ps2controller.button_pressed(ps2controller.PS2Button.Cross)</field></block></value><value name=\"B\"><shadow type=\"math_number\"><field name=\"NUM\">0</field></shadow></value></block></value><statement name=\"DO0\"><block type=\"device_show_leds\"><field name=\"LEDS\">`\n        # . . . # \n        . # . # . \n        . . # . . \n        . # . # . \n        # . . . #\n        `</field><next><block type=\"device_set_digital_pin\"><value name=\"name\"><shadow type=\"digital_pin_shadow\"><field name=\"pin\">DigitalPin.P10</field></shadow></value><value name=\"value\"><shadow type=\"math_number_minmax\"><mutation min=\"0\" max=\"1\" label=\"Value\" precision=\"0\"></mutation><field name=\"SLIDER\">100</field></shadow></value></block></next></block></statement><next><block type=\"controls_if\"><value name=\"IF0\"><shadow type=\"logic_boolean\"><field name=\"BOOL\">TRUE</field></shadow><block type=\"logic_compare\"><field name=\"OP\">GT</field><value name=\"A\"><shadow type=\"math_number\"><field name=\"NUM\">0</field></shadow><block type=\"typescript_expression\"><field name=\"EXPRESSION\">ps2controller.button_pressed(ps2controller.PS2Button.Square)</field></block></value><value name=\"B\"><shadow type=\"math_number\"><field name=\"NUM\">0</field></shadow></value></block></value><statement name=\"DO0\"><block type=\"device_set_digital_pin\"><value name=\"name\"><shadow type=\"digital_pin_shadow\"><field name=\"pin\">DigitalPin.P11</field></shadow></value><value name=\"value\"><shadow type=\"math_number_minmax\"><mutation min=\"0\" max=\"1\" label=\"Value\" precision=\"0\"></mutation><field name=\"SLIDER\">100</field></shadow></value><next><block type=\"device_show_leds\"><field name=\"LEDS\">`\n        # # # # # \n        # . . . # \n        # . . . # \n        # . . . # \n        # # # # #\n        `</field></block></next></block></statement><next><block type=\"controls_if\"><value name=\"IF0\"><shadow type=\"logic_boolean\"><field name=\"BOOL\">TRUE</field></shadow><block type=\"logic_compare\"><field name=\"OP\">GT</field><value name=\"A\"><shadow type=\"math_number\"><field name=\"NUM\">0</field></shadow><block type=\"typescript_expression\"><field name=\"EXPRESSION\">ps2controller.button_pressed(ps2controller.PS2Button.Circle)</field></block></value><value name=\"B\"><shadow type=\"math_number\"><field name=\"NUM\">0</field></shadow></value></block></value><statement name=\"DO0\"><block type=\"device_set_digital_pin\"><value name=\"name\"><shadow type=\"digital_pin_shadow\"><field name=\"pin\">DigitalPin.P12</field></shadow></value><value name=\"value\"><shadow type=\"math_number_minmax\"><mutation min=\"0\" max=\"1\" label=\"Value\" precision=\"0\"></mutation><field name=\"SLIDER\">100</field></shadow></value><next><block type=\"device_show_leds\"><field name=\"LEDS\">`\n        . # # # . \n        # # . # # \n        # . . . # \n        # # . # # \n        . # # # .\n        `</field></block></next></block></statement><next><block type=\"controls_if\"><value name=\"IF0\"><shadow type=\"logic_boolean\"><field name=\"BOOL\">TRUE</field></shadow><block type=\"logic_compare\"><field name=\"OP\">GT</field><value name=\"A\"><shadow type=\"math_number\"><field name=\"NUM\">0</field></shadow><block type=\"typescript_expression\"><field name=\"EXPRESSION\">ps2controller.button_pressed(ps2controller.PS2Button.Triangle)</field></block></value><value name=\"B\"><shadow type=\"math_number\"><field name=\"NUM\">0</field></shadow></value></block></value><statement name=\"DO0\"><block type=\"device_set_digital_pin\"><value name=\"name\"><shadow type=\"digital_pin_shadow\"><field name=\"pin\">DigitalPin.P13</field></shadow></value><value name=\"value\"><shadow type=\"math_number_minmax\"><mutation min=\"0\" max=\"1\" label=\"Value\" precision=\"0\"></mutation><field name=\"SLIDER\">100</field></shadow></value><next><block type=\"device_show_leds\"><field name=\"LEDS\">`\n        . . # . . \n        . # . # . \n        . # . # . \n        # . . . # \n        # # # # #\n        `</field></block></next></block></statement></block></next></block></next></block></next></block></statement></block><"],[0,"/xml>"]],"start1":71,"start2":71,"length1":13,"length2":4318}]},{"type":"edited","filename":"main.ts","patch":[{"diffs":[[0,"WritePin"],[1,"(DigitalPin.P10, 100)\n    }\n    if "],[0,"(ps2cont"]],"start1":273,"start2":273,"length1":16,"length2":51},{"diffs":[[0,"are)"],[-1,", 100)\n    }\n    if (0"],[0," > 0"]],"start1":373,"start2":373,"length1":30,"length2":8}]},{"type":"edited","filename":"pxt.json","patch":[{"diffs":[[0," ],\n"],[-1,"    \"testFiles\": [\n        \"test.ts\"\n    ],\n"],[0,"    "]],"start1":362,"start2":362,"length1":52,"length2":8}]},{"type":"added","filename":"test.ts","value":"// tests go here; this will not be compiled when this package is used as an extension.\n"}]}],"snapshots":[{"timestamp":1744314176906,"editorVersion":"7.0.61","text":{"main.blocks":"<xml xmlns=\"http://www.w3.org/1999/xhtml\">\n  <variables></variables>\n  <block type=\"pxt-on-start\" x=\"0\" y=\"0\">\n    <statement name=\"HANDLER\">\n      <block type=\"device_set_digital_pin\">\n        <field name=\"name\">DigitalPin.P12</field>\n        <value name=\"value\">\n          <shadow type=\"math_number_minmax\">\n            <mutation min=\"0\" max=\"1\" label=\"Number\"></mutation>\n            <field name=\"SLIDER\">1</field>\n          </shadow>\n        </value>\n        <next>\n          <block type=\"spi_pins\">\n            <field name=\"mosi\">DigitalPin.P15</field>\n            <field name=\"miso\">DigitalPin.P14</field>\n            <field name=\"sck\">DigitalPin.P13</field>\n            <next>\n              <block type=\"spi_format\">\n                <value name=\"bits\">\n                  <shadow type=\"math_number\">\n                    <field name=\"NUM\">8</field>\n                  </shadow>\n                </value>\n                <value name=\"mode\">\n                  <shadow type=\"math_number\">\n                    <field name=\"NUM\">3</field>\n                  </shadow>\n                </value>\n                <next>\n                  <block type=\"spi_frequency\">\n                    <value name=\"frequency\">\n                      <shadow type=\"math_number\">\n                        <field name=\"NUM\">1000000</field>\n                      </shadow>\n                    </value>\n                    <next>\n                      <block type=\"typescript_statement\" editable=\"false\">\n                        <mutation line0=\"const config_cmd_exit = hex\" line1=\"    `014300005a5a5a5a5a`\" numlines=\"2\" declaredvars=\"config_cmd_exit\"></mutation>\n                        <field name=\"LINE0\">const config_cmd_exit = hex</field>\n                        <field name=\"LINE1\">    `014300005a5a5a5a5a`</field>\n                        <next>\n                          <block type=\"typescript_statement\" editable=\"false\">\n                            <mutation line0=\"function send_command(transmit: Buffer) {\" line1=\"    //transmit = reverse.rbuffer(transmit)\" line2=\"    pins.digitalWritePin(DigitalPin.P12, 0);\" line3=\"    for (let i = 0; i &lt; transmit.length; i++) {\" line4=\"        pins.spiWrite(transmit[i]);\" line5=\"    }\" line6=\"    pins.digitalWritePin(DigitalPin.P12, 1)\" line7=\"}\" numlines=\"8\"></mutation>\n                            <field name=\"LINE0\">function send_command(transmit: Buffer) {</field>\n                            <field name=\"LINE1\">    //transmit = reverse.rbuffer(transmit)</field>\n                            <field name=\"LINE2\">    pins.digitalWritePin(DigitalPin.P12, 0);</field>\n                            <field name=\"LINE3\">    for (let i = 0; i &lt; transmit.length; i++) {</field>\n                            <field name=\"LINE4\">        pins.spiWrite(transmit[i]);</field>\n                            <field name=\"LINE5\">    }</field>\n                            <field name=\"LINE6\">    pins.digitalWritePin(DigitalPin.P12, 1)</field>\n                            <field name=\"LINE7\">}</field>\n                          </block>\n                        </next>\n                      </block>\n                    </next>\n                  </block>\n                </next>\n              </block>\n            </next>\n          </block>\n        </next>\n      </block>\n    </statement>\n  </block>\n  <block type=\"device_forever\" x=\"535\" y=\"0\">\n    <statement name=\"HANDLER\">\n      <block type=\"typescript_statement\" editable=\"false\">\n        <mutation line0=\"send_command(config_cmd_exit)\" numlines=\"1\"></mutation>\n        <field name=\"LINE0\">send_command(config_cmd_exit)</field>\n      </block>\n    </statement>\n  </block>\n</xml>","main.ts":"basic.forever(function () {\n    if (ps2controller.button_pressed(ps2controller.PS2Button.Cross) > 0) {\n        basic.showLeds(`\n            # . . . #\n            . # . # .\n            . . # . .\n            . # . # .\n            # . . . #\n            `)\n    }\n    if (ps2controller.button_pressed(ps2controller.PS2Button.Square) > 0) {\n        basic.showLeds(`\n            # # # # #\n            # . . . #\n            # . . . #\n            # . . . #\n            # # # # #\n            `)\n    }\n    if (ps2controller.button_pressed(ps2controller.PS2Button.Circle) > 0) {\n        basic.showLeds(`\n            . # # # .\n            # # . # #\n            # . . . #\n            # # . # #\n            . # # # .\n            `)\n    }\n    if (ps2controller.button_pressed(ps2controller.PS2Button.Triangle) > 0) {\n        basic.showLeds(`\n            . . # . .\n            . # . # .\n            . # . # .\n            # . . . #\n            # # # # #\n            `)\n    }\n})\n","README.md":"","custom.ts":" ","pxt.json":"{\n    \"name\": \"test-ps2-controller\",\n    \"dependencies\": {\n        \"core\": \"*\",\n        \"radio\": \"*\",\n        \"ps2-controller\": \"github:gbraad/pxt-ps2-controller#bda622f8a4dd444648fe25d68c7c2192b122715d\"\n    },\n    \"description\": \"\",\n    \"files\": [\n        \"main.blocks\",\n        \"main.ts\",\n        \"README.md\",\n        \"custom.ts\"\n    ],\n    \"preferredEditor\": \"tsprj\",\n    \"targetVersions\": {\n        \"branch\": \"v2.0.17\",\n        \"tag\": \"v2.0.17\",\n        \"commits\": \"https://github.com/microsoft/pxt-microbit/commits/f2fa2d74d5c9b81c3e5df4974bb6fe3f9900c901\",\n        \"target\": \"2.0.17\",\n        \"pxt\": \"5.15.19\"\n    }\n}"}}],"shares":[],"lastSaveTime":1744315240426}